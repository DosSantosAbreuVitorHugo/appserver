stage('Provision and Deploy on Remote Server') {
    steps {
        sshagent(['ssh']) {
            sh '''
            ssh -o StrictHostKeyChecking=no vagrant@192.168.56.122 "
            set -e

            # Install Docker if missing
            if ! command -v docker &> /dev/null; then
                sudo apt-get update -y
                sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
                echo \\\"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\\\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                sudo apt-get update -y
                sudo apt-get install -y docker-ce docker-ce-cli containerd.io
                sudo usermod -aG docker vagrant
                sudo systemctl enable docker
                sudo systemctl start docker
            fi

            # Load Docker image
            sudo docker load -i /tmp/rise-app.tar

            # Stop old container if exists
            sudo docker stop rise-app || true
            sudo docker rm rise-app || true

            # Create folder for SQLite DB
            mkdir -p /tmp/rise-app-data
            sudo chmod -R 777 /tmp/rise-app-data

            # Copy the correct appsettings.json to the data directory FIRST
            cp /tmp/dotnet-2526-vc2/src/Rise.Server/appsettings.json /tmp/rise-app-data/ || true

            # Run EF migrations with explicit connection string
            sudo docker run --rm \\
              -v /tmp/dotnet-2526-vc2/src:/src \\
              -v /tmp/rise-app-data:/app/Data \\
              -w /app/Data \\
              mcr.microsoft.com/dotnet/sdk:9.0 \\
              bash -c \\\"
                dotnet tool install --global dotnet-ef --version 9.0.9 || true
                export PATH=\\\\\\\$PATH:/root/.dotnet/tools
                dotnet ef database update \\
                  --startup-project /src/Rise.Server \\
                  --project /src/Rise.Persistence \\
                  --connection \\\"DataSource=/app/Data/Rise.db;Cache=Shared\\\"
              \\\"

            # Verify the database was created
            echo 'Checking if database file was created:'
            ls -la /tmp/rise-app-data/ | grep -i rise.db || echo 'No database file found'

            # Run the app container - FIXED THIS PART
            sudo docker run -d \\
              -p 8080:8080 \\
              --name rise-app \\
              --restart unless-stopped \\
              -v /tmp/rise-app-data:/app/Data \\
              -e ConnectionStrings__DatabaseConnection=\\\"DataSource=/app/Data/Rise.db;Cache=Shared\\\" \\
              rise-app

            # Ensure node_exporter is running
            if ! sudo docker ps -q -f name=node_exporter | grep -q .; then
                sudo docker run -d --name node_exporter --network host --restart unless-stopped prom/node-exporter:latest
            else
                echo 'node_exporter is already running, skipping...'
            fi
            "
            '''
        }
    }
}